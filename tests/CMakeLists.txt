cmake_minimum_required(VERSION 3.9)
project(cio_unit_test C)
enable_testing()

add_library(fff INTERFACE)
target_include_directories(fff INTERFACE fff)

add_library(unity
    unity/src/unity.c
)
set_target_properties(unity PROPERTIES
    COMPILE_OPTIONS "$<$<OR:$<C_COMPILER_ID:GNU>,$<C_COMPILER_ID:Clang>>:-Wno-strict-overflow>"
    C_CLANG_TIDY ""
)
target_include_directories(unity PUBLIC ${CMAKE_CURRENT_LIST_DIR}/unity/src/)

add_executable(test_cio_base64 test_cio_base64.c ../src/cio_base64.c)

add_executable(test_cio_buffered_stream test_cio_buffered_stream.c ../src/cio_buffered_stream.c)

set_source_files_properties(../src/http-parser/http_parser.c PROPERTIES COMPILE_OPTIONS "$<$<OR:$<C_COMPILER_ID:GNU>,$<C_COMPILER_ID:Clang>>:-Wno-shadow;-Wno-sign-conversion;-Wno-conversion;-Wno-switch-default>")
add_executable(test_cio_http_server test_cio_http_server.c ../src/cio_http_server.c ../src/cio_http_location.c ../src/cio_http_location_handler.c ../src/http-parser/http_parser.c)

add_executable(test_cio_http_location test_cio_http_location.c ../src/cio_http_location.c ../src/cio_http_location_handler.c)

add_executable(test_cio_inet_address
    test_cio_inet_address.c
    ../src/platform/shared/cio_inet_address_impl.c
)

add_executable(test_cio_inet_socket_address
    test_cio_inet_socket_address.c
    ../src/platform/shared/cio_inet_address_impl.c
    ../src/platform/shared/cio_socket_address_impl.c
    $<$<PLATFORM_ID:Linux>:../src/linux/cio_linux_endian.c>
    $<$<PLATFORM_ID:Windows>:../src/windows/cio_windows_endian.c>
)

add_executable(test_cio_random test_cio_random.c ../src/cio_random.c)

add_executable(test_cio_read_buffer test_cio_read_buffer.c)
 
add_executable(test_cio_utf8_checker test_cio_utf8_checker.c ../src/cio_utf8_checker.c)

add_executable(test_cio_websocket test_cio_websocket.c ../src/cio_websocket.c)

add_executable(test_cio_websocket_location_handler
    test_cio_websocket_location_handler.c
    ../src/cio_websocket_location_handler.c
    ../src/sha1/sha1.c
    ../src/cio_base64.c
    $<$<PLATFORM_ID:Linux>:../src/linux/cio_linux_string.c>
    $<$<PLATFORM_ID:Windows>:../src/windows/cio_windows_string.c>
)

add_executable(test_cio_websocket_mask test_cio_websocket_mask.c)

add_executable(test_cio_write_buffer test_cio_write_buffer.c)

add_executable(test_cio_version test_cio_version.c ../src/cio_version.c)

get_property(includes TARGET cio::cio PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
get_property(targets DIRECTORY "${CMAKE_CURRENT_LIST_DIR}" PROPERTY BUILDSYSTEM_TARGETS)
foreach(tgt ${targets})
    get_target_property(target_type ${tgt} TYPE)
    if (target_type STREQUAL "EXECUTABLE")
        add_dependencies(${tgt} cio::cio) # Necessary to generage cio_version_private.h before compiling the tests.
        target_link_libraries(${tgt} fff unity)
        set_target_properties(${tgt} PROPERTIES
            C_STANDARD_REQUIRED ON
            C_EXTENSIONS OFF
            C_CLANG_TIDY ""
        )
        target_include_directories(${tgt} PUBLIC ${includes})
        add_test(NAME cio.common.${tgt} COMMAND ${tgt})
    endif()

	if(CIO_ENABLE_LTO AND NOT ${target_type} STREQUAL "INTERFACE_LIBRARY")
        set_property(TARGET ${tgt} PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
    endif()
endforeach()

if(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    add_subdirectory(linux)
endif()


