name: CI build

on: [push, pull_request]

permissions:
    contents: write

jobs:
  windows-debug:
    name: x86 windows Debug
    runs-on: windows-2019

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      run: ctest -DCTEST_CMAKE_GENERATOR="Visual Studio 16 2019" -DCTEST_TOOLCHAIN_FILE="/tmp/cio/toolchains/x86_windows_msvc.cmake" -DCTEST_CONFIGURATION_TYPE:STRING=Debug -S build.cmake

#  windows-debug-dll:
#    name: x86 windows Debug DLL
#    runs-on: windows-2019
#
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#    - name: ctest build
#      run: ctest -VV -DCTEST_CMAKE_GENERATOR="Visual Studio 16 2019" -DCTEST_BUILD_SHARED_LIBS:BOOL=YES -DCTEST_TOOLCHAIN_FILE="/tmp/cio/toolchains/x86_windows_msvc.cmake" -DCTEST_CONFIGURATION_TYPE:STRING=Debug -S build.cmake

  gcc-10-debug:
    name: x86 gcc-10 Debug
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/x86-linux-gcc-10.cmake
        ctest_configuration_type: Debug

  gcc-10-release:
    name: x86 gcc-10 Release
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/x86-linux-gcc-10.cmake
        ctest_configuration_type: Release

  gcc-10-valgrind:
    name: x86 gcc-10 Valgrind
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/x86-linux-gcc-10.cmake
        ctest_configuration_type: Valgrind

  clang-11-debug:
    name: x86 clang-11 Debug
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/x86-linux-clang-11.cmake
        ctest_configuration_type: Debug

  clang-11-release:
    name: x86 clang-11 Release
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/x86-linux-clang-11.cmake
        ctest_configuration_type: Release

  clang-11-UndefinedBehaviorSanitizer:
    name: x86 clang-11 UndefinedBehaviorSanitizer
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/x86-linux-clang-11.cmake
        ctest_configuration_type: UndefinedBehaviorSanitizer

  clang-11-LeakSanitizer:
    name: x86 clang-11 LeakSanitizer
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/x86-linux-clang-11.cmake
        ctest_configuration_type: LeakSanitizer

  clang-11-MemorySanitizer:
    name: x86 clang-11 MemorySanitizer
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/x86-linux-clang-11.cmake
        ctest_configuration_type: MemorySanitizer

  clang-11-AddressSanitizer:
    name: x86 clang-11 AddressSanitizer
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/x86-linux-clang-11.cmake
        ctest_configuration_type: AddressSanitizer

  clang-11-scanbuild:
    name: x86 clang-11 scan-build
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/x86-linux-clang-11.cmake
        ctest_analyzer: scan-build-11

  clang-11-clangtidy:
    name: x86 clang-11 clang-tidy
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/x86-linux-clang-11.cmake
        ctest_analyzer: clang-tidy-11
        ctest_configuration_type: Release

  gcc-9-arm:
    name: arm gcc-9 Release
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/arm-linux-gnueabihf-gcc-9.cmake
        ctest_configuration_type: Release

  gcc-9-aarch64:
    name: aarch64 gcc-9 Release
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/aarch64-linux-gnu-gcc-9.cmake
        ctest_configuration_type: Release

  gcc-9-riscv64:
    name: riscv64 gcc-9 Release
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: /tmp/cio/toolchains/riscv64-linux-gcc-9.cmake
        ctest_configuration_type: Release

  gcc-9-coverage:
    name: x86 code coverage
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: ctest build
      uses: gatzka/ctest-build-action@v1.6.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        ctest_toolchain_file: build/toolchains/x86-linux-gcc-9.cmake
        ctest_configuration_type: Coverage
        ctest_binary_directory: build
    - name: coverage upload
      uses: gatzka/codecov-action@v1.5.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        path: ./
        rootpath: ./
        gcov: gcov-9
        flags: unittests

  sonarcloud:
    name: sonarcloud scan build
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: sonarcloud cmake build
      uses: gatzka/sonarcloud-cmake-build-action@v1.4.2
      with:
        install_deps: ./.github/workflows/install-deps.sh
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        cmake_build_type: Debug

  doxygen:
    name: generate doxygen documentation
    runs-on: ubuntu-20.04
    needs: [gcc-10-debug, gcc-10-release, gcc-10-valgrind, clang-11-debug, clang-11-release, clang-11-UndefinedBehaviorSanitizer, clang-11-LeakSanitizer, clang-11-MemorySanitizer, clang-11-AddressSanitizer, clang-11-scanbuild, clang-11-clangtidy]
    if: contains(github.ref, 'master')

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: cmake build
      uses: gatzka/cmake-build-action@v1.4.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        cmake_build_target: cio_docs
    - name: GitHub Pages Deploy
      uses: gatzka/publish-gh-pages-action@master
      env:
        BUILD_DIR: build/lib/docs/
        GITHUB_TOKEN: ${{ secrets.github_token }}
        GH_PAGES_SUBDIR: ./doc

  coverity:
    name: coverity scan build
    runs-on: ubuntu-20.04
    if: contains(github.ref, 'coverity_scan')

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: coverity cmake build
      uses: gatzka/coverity-cmake-build-action@v1.4.0
      with:
        install_deps: ./.github/workflows/install-deps.sh
        cmake_build_type: Debug
        coverity_token: ${{ secrets.COVERITY_TOKEN }}
        coverity_account: gatzka
        coverity_project: cio
        coverity_email: stephan.gatzka@gmail.com
        coverity_version: ${{ github.sha }}
        coverity_description: "Build submitted by github action"

